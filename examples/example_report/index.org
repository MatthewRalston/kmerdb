#+TITLE: KmerDB (.kdb) example report
#+SUBTITLE: A simple bgzf-based k-mer database format
#+AUTHOR: Matthew Ralston <mralston.development@gmail.com>

* Introduction
** The environment consists of many k-mer counters and not enough graph diagnostics
** Graph diagnostics capabilities are very high in Neo4J
** RDF is a data exchange method that facilitates ontological exchange.

* Methodology
** DONE Present a new tool 'kmerdb' to create efficient files for non-sparse k-mer profile storage
CLOSED: [2022-01-07 Fri 09:17]
** DONE unsupervised ML techniques for dimensionality reduction, visualization, and clustering
CLOSED: [2022-01-07 Fri 09:17]
** TODO Produce a Neo4J graph database for assembly visualization
*** Consult [[../../TODO.org][kmerdb TODO.org]] for more details
** TODO Compare with kPAL and khmer
*** runtime(y) vs # of simulated fastq reads (x)
*** runtime(y) vs k
*** memory(y) vs k
*** filesize vs k
** Genome size estimation
*** k-mer count / NB mean (or median) coverage

* Results
** The program has extra features compared to other k-mer programs
*** Composite profiles out-of-the-box
*** genome size estimation
**** k-mer coverage / avg coverage of simulated fastq (from genomic fasta)
*** metadata header
*** distance matrix generation
*** profile nonrmalization
*** dimensionality reduction
*** clustering
*** graph db output
*** excellent documentation
**** How to use your own normalization methods
**** How to use your own distance metrics
**** How to use your own dimensionality reduction / parameters
**** How to use your own clustering algorithms
** The program is sufficiently performant and low-memory
*** k vs runtime
**** kmerdb vs kPAL vs khmer
*** k vs peak memory
**** kmerdb vs kPAL vs khmer
*** filesize vs runtime
** The index allows for fast random access to k-mers and metadata
*** How fast can the RDF/Neo4J graph be constructed from an --all-metadata .kdb file?
* Discussion
* Conclusion
* Abstract
* Introduction
